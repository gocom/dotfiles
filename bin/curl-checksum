#!/usr/bin/env bash

usage () {
  cat <<EOF
Download and SHA-256 checksum-validate a file.

The requested URL is validated against the given SHA-256 checksum before
the contents are returned. If the file does not match the checksum, the program
exits with error code 1.

If no checksum argument is given, prints out the current checksum for the
requested URL to STDOUT.

Usage:
  $ ${0##*/} [options] <url> [output-file] [sha-256]

Options:
  -h, --help     Print this message
  -v, --version  Print version number

Examples:
  $ ${0##*/} https://localhost/file.zip file.zip
  > ecf701f727d9e2d77c4aa49ac6fbbcc997278aca010bddeeb961c10cf54d435a
  $ ${0##*/} https://localhost/document.text 788eb2...be65
  $ ${0##*/} https://localhost/file.zip file.zip 788eb2...be65
EOF
}

main () {
  local url sha256 checksum file status temporary directory basename

  url="${1:-}"
  file="${2:-}"
  sha256="${3:-}"
  status=0

  if [ "$file" ]; then
    directory="$(dirname "$file")"
    basename="$(basename "$file")"

    if ! [ "$directory" ]; then
      directory="${directory}/"
    fi

    temporary="${directory}.cc-${basename}.tmp"
  else
    temporary="$(mktemp)"
  fi

  if ! [ "$url" ]; then
    echo "URL is required." >&2
    exit 1
  fi

  curl -qfSL --progress-bar --output "$temporary" -- "$url" || exit 1

  checksum="$(shasum -a 256 -- "$temporary" | awk '{print $1}')" || status=1

  if [ "$status" -eq 1 ]; then
    rm "$temporary"
    exit 1
  fi

  if ! [ "$sha256" ]; then
    echo "SHA-256: $checksum"
    rm "$temporary" || exit 1
    exit 0
  fi

  if [ "$checksum" = "$sha256" ]; then
    if [ "$file" ]; then
      mv "$temporary" "$file" || exit 1
    else
      cat "$temporary" || exit 1
    fi

    exit 0
  fi

  echo "SHA-256 checksum mismatch." >&2
  echo "⋯ Expected: $sha256" >&2
  echo "⋯ Received: $checksum" >&2
  rm "$temporary" || exit 1
  exit 1
}

case "${1:-}" in
  ""|-h|--help) usage ;;
  -v|--version) echo "0.0.0" ;;
  *) main "$@" ;;
esac
