#!/usr/bin/env bash

app_name="${0##*/}"
app_config="${app_name#*-}"
app_prefix="$(php -r "echo PHP_SYSCONFDIR;" 2> /dev/null)"

usage () {
  cat <<EOF
Run PHP with a $app_config configuration.

Usage:
  $ $app_name [options]

Options:
  -h, --help     Print this message
  -v, --version  Print version number
      --configs  List loaded extra config files
      --init     Initialize new configuration set

Examples:
  $ $app_name /usr/local/bin/composer test
EOF
}

main () {
  local f args dirs separator

  args=()
  dirs="$(php -r "echo PHP_CONFIG_FILE_SCAN_DIR;")"
  separator="$(php -r "echo PATH_SEPARATOR;")"

  if ! [ "$app_prefix" ]; then
    echo "PHP_SYSCONFDIR is not available." >&2
    return 1
  fi

  for f in "$app_prefix"/"$app_name".ini; do
    if [ -e "$f" ]; then
      args+=("-c")
      args+=("$f")
    fi
  done

  for f in "$app_prefix/$app_config".d; do
    if [ -e "$f" ]; then
      if [ "$dirs" ]; then
        dirs="$dirs$separator$f"
      else
        dirs="$f"
      fi
    fi
  done

  if [ "$dirs" ]; then
    export PHP_INI_SCAN_DIR="$dirs"
  fi

  set -- "${args[@]}" "$@"
  exec php "$@"
}

configs () {
  local f

  for f in "$app_prefix"/"$app_name".ini "$app_prefix/$app_config.d/"*.ini; do
    if [ -f "$f" ]; then
      echo "$f"
    fi
  done
}

init () {
  local name target

  name="$(basename -- "${1:-}")" || return 1

  if ! [ "$name" ]; then
    read -r -p "Name: " name
  fi

  target="$(realpath -- "$0")" || return 1

  if ! [ "$name" ]; then
    echo "Name required"
    return 1
  fi

  ln -s "$target" "$name" || return 1
  chmod +x "$name" || return 1
}

case "${1:-}" in
  -h|--help) usage ;;
  -v|--version) echo "0.0.0" ;;
  --configs) configs ;;
  --init) init "${@:2}" ;;
  *) main "$@" ;;
esac
