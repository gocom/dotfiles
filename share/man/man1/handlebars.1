.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.8.
.TH HANDLEBARS "1" "February 2019" "dotfiles" "User Commands"
.SH NAME
handlebars \- handlebars
.SH DESCRIPTION
Parse handlebars templates.
.SS "Usage:"
.IP
$ handlebars [options] [map|parse] [\-\-variable=value, ...]
.SH OPTIONS
.TP
\fB\-h\fR, \fB\-\-help\fR
Print this message
.TP
\fB\-v\fR, \fB\-\-version\fR
Print version number
.TP
\fB\-\-verbose\fR
Verbose mode
.HP
\fB\-f\fR <path>, \fB\-\-file=\fR<path>
.IP
Path to the used handlebars template file. If not specified, defaults to
standard input.
.HP
\fB\-i\fR <string>, \fB\-\-input=\fR<string>
.IP
Handlebars template as an input string. If not specified, defaults to
standard input.
.HP
\fB\-o\fR <path>, \fB\-\-outfile=\fR<path>
.IP
Path to the created processed output file. If not specified, defaults to
standard output.
.HP
\fB\-\-\fR<name>=<value>, \fB\-\-var\fR <name> <value>, \fB\-\-variable\fR <name> <value>
.IP
Sets a template variable.
.HP
\fB\-\-helper\fR <name> <fn>
.IP
Sets a template helper. Note that the 'fn', the helper callback function, must
not contain unsanitized user\-input as it is treated as executable code and is
evaluated.
.SS "Commands:"
.IP
$ handlebars map [\-\-variable=value, ...]
Generates JSON object from given arguments.
.IP
\f(CW$ handlebars parse [--variable=value, ...]\fR
.IP
Parses the standard input using the given variable arguments.
.SS "Example:"
.IP
$ echo 'Hello {{name}}!' | handlebars parse \fB\-\-variable\fR name "World"
> Hello World!
