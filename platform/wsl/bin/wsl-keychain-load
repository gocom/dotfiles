#!/usr/bin/env bash

app_name="${0##*/}"
app_version="0.0.0"

usage () {
  cat <<EOF
Loads SSH key passphrases from Windows Credential Manager to Keychain.

For Keychain to pass the credentials to the SSH key agent, make sure you have
sourced keychain initialization script in your active shell session.
To automate this, you can do the following to your bash profile:

  . "$HOME/.keychain/$HOSTNAME-sh"

Usage:
  $ $app_name <command> [options]

Commands:
  $ $app_name init
  Loads all SSH key passphrases.

  $ $app_name load <filename>
  Loads passphrases for the given SSH key.

Options:
  -h, --help     Print this message
  -v, --version  Print version number

Example:
  $ $app_name init
  $ $app_name load "$HOME/.ssh/id_rsa"
EOF
}

depends () {
  local name

  for name in "cat" "chmod" "keychain" "pwsh.exe" "rm" "wslpath" "wsl-credential-manager.ps1"; do
    if ! [ "$(command -v "$name")" ]; then
      echo "Dependency missing: $name" >&1
      exit 1
    fi
  done
}

init () {
  local file

  depends

  keychain -q --clear 2> /dev/null

  for file in "$HOME/.ssh/id_"*; do
    if [ -f "$file" ] && [ -f "$file.pub" ]; then
      load "$file"
    fi
  done
}

load() {
  local credential status filename script password

  depends

  cd || return 1

  script="/tmp/keychain-load-ssh-askpass"
  filename="${1:-}"

  if ! [ "$filename" ] || ! [ -f "$filename" ]; then
    echo "SSH key filename required." >&2
    return 1
  fi

  credential="$(wslpath -w "$filename")"
  credential="${credential:2}"
  password="$(wsl-credential-manager.ps1 -credential "$credential" && echo "yes")"

  if ! [ "$password" ]; then
    echo "Credential '$credential' not found in Windows Credential Manager for SSH key '$filename'."
    echo "Prompting for password instead as a fallback..."
    echo ""

    keychain -q --nogui "$filename" || return 1
    return 0
  fi

  cat > "$script" <<EOL || return 1
#!/usr/bin/env bash
wsl-credential-manager.ps1 -credential "$credential"
EOL

  chmod u+x "$script" || return 1

  export DISPLAY=0
  export SSH_ASKPASS="$script"

  keychain -q "$filename" || status=1

  rm -f "$script" || return 1

  return "${status:-0}"
}

case "${1:-}" in
  ""|-h|--help) usage ;;
  -v|--version) echo "$app_version" ;;
  init) init ;;
  *) load "$@" ;;
esac
